0: oepc ldmar :1              //mar=pc next=1 - put pc on address bus
1: oemem ldir incpc :2        //ir=m[mar],pc++ next=2 - read opcode into ir and increment pc
2: oeconst ldabr :3           //abr=0,,next=3 - put const (0) on bus
3: oepc ldmar :4              //mar=pc next=4 - put pc on address bus
4: oemem ldmar incpc :5       //mar=m[mar],pc++, next=5 - read the memory contents into mar and increment pc
5: oeacc ldacc :6             //acc=abr+mar - store the memory contents into acc
6: oeacc ldabr :7             //abr=acc, next=7 - load abr with the value in acc
7: oepc ldmar :8              //mar=pc next=8 - put pc on address bus
8: oemem ldmar incpc :9       //mar=m[mar],pc++ next=9 - read the mem contents into mar and increment pc
9: oeacc ldabr :10            //acc=abr+mar - store the mem contents after addition into acc
10: oeacc ldabr :11           //abr=acc, next=11 - load abr with the value in acc
11: oepc ldmar :12            //mar=pc next=12 - put pc on address bus
12: oemem ldmar incpc :13     //mar=m[mar],pc++ next=13 - read the mem contents into mar and increment pc
13: oeacc ldabr sub :14       //acc=abr-mar - store the mem contents after subtraction into acc
14: oepc ldmar :15            //mar=pc next=15 - put pc on address bus
15: oemem ldmar incpc :16     //mar=m[mar],pc++ next=16 - read mem contents into mar and increment pc
16: oeacc write :17           //m[mar]=acc next=17 - write the value stored in acc to the memory
17: oepc ldmar :18            //mar=pc next=18 - put pc on address bus
18: oemem ldacc incpc :19     //acc=m[mar],pc++ next=19 - put the mar contents on acc
19: eqz :21                   //if (eqz) go to next=21 
20: oepc ldmar :21            //mar=pc next=21 - put pc on address bus
21: incpc oemem ldpc :22      //pc=m[mar], next=22 - put mar into pc
22: oepc ldmar :23            //mar=pc next=23 - put pc on address bus
23: oemem ldacc incpc :24     //acc=m[mar],pc++ next=24 - put the mar contents on acc
24: carry :25                   //if (carry) go to next=26
25: oepc ldmar :26            //mar=pc next=26 - put pc on address bus
26: incpc oemem ldpc :27      //pc=m[mar], next=27 - put mar into pc
27: oepc ldmar :28            //mar=pc, next=28 - put pc on address bus
28: oemem ldpc :29            //pc=m[mar],next=29 - jump to address pointed by operand
